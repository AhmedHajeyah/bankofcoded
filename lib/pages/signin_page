import 'dart:js';
import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:go_router/go_router.dart';
import 'package:image_picker/image_picker.dart';
import 'package:provider/provider.dart';
import '../models/user.dart';
import '../providers/auth_providers.dart';

import 'package:flutter/material.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:provider/provider.dart';
import '../models/user.dart';
import '../providers/auth_providers.dart';

class SignInPage extends StatelessWidget {
  SignInPage({Key? key}) : super(key: key);
  TextEditingController usernameController = TextEditingController();
  TextEditingController passwordController = TextEditingController();
  final _formKey = GlobalKey<FormState>();
  String password = '';
  String Username = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Sign In"),
      ),
      body: Center(
        child: Column(
          children: [
            TextFormField(
                decoration: InputDecoration(
                  labelText: "Username",
                ),
                onChanged: (value) {
                  Username = value;
                }),
            TextFormField(
                decoration: InputDecoration(
                  labelText: "Password",
                ),
                obscureText: true,
                onChanged: (value) {
                  password = value;
                }),
            ElevatedButton(
              onPressed: () {
                if (_formKey.currentState!.validate()) {
                  _formKey.currentState!.save();

                  signIn(Username, password);
                }
              },
              child: const Text("SignIn"),
            ),
          ],
        ),
      ),
    );
  }

  void signIp(String name, String password) async {
    print("j");

    Provider.of<AuthProviders>(context, listen: false)
        .signIn(username: name, password: password);

    setState(() {
      //isLoading = false;
      context.push("/main");
    });
  }


}
